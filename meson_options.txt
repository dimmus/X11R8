option('legacy',                type: 'boolean', value: false,                                       description: '[xproto]')
option('xthreads',              type: 'boolean', value : true,                                       description: '[xau] Whether libXau should be compiled with thread support.')
option('xdmauth',               type: 'boolean', value : true,                                       description: '[xdmcp] Has Wraphelp.c needed for XDM AUTH protocols.')
option('composecache',          type: 'boolean', value : true,                                       description: '[x11] Enable compose table cache support.')
option('xkb',                   type: 'boolean', value : true,                                       description: '[x11] Enable XKB support *EXPERIMENTAL*.')
option('xf86bigfont',           type: 'boolean', value : true,                                       description: '[x11] Enable XF86BigFont extension support.')
option('xcms',                  type: 'boolean', value : false,                                      description: '[x11] Enable Xlib support for CMS *EXPERIMENTAL*.')
option('xlocale',               type: 'boolean', value : true,                                       description: '[x11] Enable Xlib locale implementation *EXPERIMENTAL*.')
option('open-zfile',            type: 'boolean', value : true,                                       description: '[xpm] Search for files with .Z & .gz extensions automatically.')
option('stat-zfile',            type: 'boolean', value : true,                                       description: '[xpm] Search for files with .Z & .gz extensions automatically.')
option('build-sxpm',            type: 'boolean', value : true,                                       description: '[xpm] Build programm to show XPM files.')

## xserver
option('xorg',                  type: 'combo',   value: 'auto',  choices: ['true', 'false', 'auto'], description: 'Enable Xorg X Server')
option('xwayland',              type: 'boolean', value: false,                                       description: 'Enable Xwayland X server')
option('glamor',                type: 'boolean', value: false,                                       description: 'Enable glamor (default yes for Xorg/Xwayland builds)')
option('xwayland_ei',           type: 'combo',   value: 'false', choices: ['socket', 'portal', 'false', 'auto'], description: 'Enable emulated input support on Xwayland')
option('xnest',                 type: 'boolean', value: false,                                       description: 'Enable Xnest nested X server')
option('xwin',                  type: 'combo',   value: 'false', choices: ['true', 'false', 'auto'], description: 'Enable XWin X server')
option('xquartz',               type: 'combo',   value: 'false', choices: ['true', 'false', 'auto'], description: 'Enable Xquartz X server')
option('xephyr',                type: 'boolean', value: false,                                       description: 'Enable Xephyr nested X server')
option('xvfb',                  type: 'boolean', value: true,                                        description: 'Enable Xvfb X server')

option('builder_addr',          type: 'string',                                                      description: 'Builder address', value: 'xorg@lists.freedesktop.org')
option('builder_string',        type: 'string',                                                      description: 'Additional builder string')

option('log_dir',               type: 'string')
option('module_dir',            type: 'string',  value: 'xorg/modules',                              description: 'X.Org modules directory (absolute or relative to the directory specified by the libdir option)')
option('default_font_path',     type: 'string')
option('fontrootdir',           type: 'string',                                                      description: 'Root directory for legacy fonts. Default: from font-utils.pc or $datadir/fonts/X11')
option('serverconfigdir',       type: 'string',                                                      description: 'Miscellaneous server configuration files path. Default: $libdir/xorg')

option('glx',                   type: 'boolean', value: false) # need dri
option('xdmcp',                 type: 'boolean', value: true)
option('xdm-auth-1',            type: 'boolean', value: true)
option('ipv6',                  type: 'combo',   value: 'auto', choices: ['true', 'false', 'auto'])
option('input_thread',          type: 'combo',   value: 'auto', choices: ['true', 'false', 'auto'])

option('xkb_dir',               type: 'string')
option('xkb_output_dir',        type: 'string')
option('xkb_bin_dir',           type: 'string')
option('xkb_default_rules',     type: 'string', value: 'evdev')
option('xkb_default_model',     type: 'string', value: 'pc105')
option('xkb_default_layout',    type: 'string', value: 'us')
option('xkb_default_variant',   type: 'string')
option('xkb_default_options',   type: 'string')

option('fallback_input_driver', type: 'string', value: 'auto')

option('vendor_name',           type: 'string', value: 'The X.Org Foundation')
option('vendor_name_short',     type: 'string', value: 'X.Org')
option('vendor_web',            type: 'string', value: 'http://wiki.x.org')

option('dtrace',                type: 'boolean', value: false,  description: 'Enable dtrace hooks')

option('listen_tcp',            type: 'boolean', value: false,  description: 'Listen on TCP by default')
option('listen_unix',           type: 'boolean', value: true,   description: 'Listen on Unix by default')
option('listen_local',          type: 'boolean', value: true,   description: 'Listen on local by default')

option('suid_wrapper',          type: 'boolean', value: false,  description: 'SUID wrapper for legacy driver support')
option('pciaccess',             type: 'boolean', value: true,   description: 'Xorg pciaccess support')
option('udev',                  type: 'boolean', value: true)
option('udev_kms',              type: 'boolean', value: true)
option('dpms',                  type: 'boolean', value: true,   description: 'Xorg DPMS extension')
option('screensaver',           type: 'boolean', value: true,   description: 'ScreenSaver extension')
option('xres',                  type: 'boolean', value: true,   description: 'XRes extension')
option('xace',                  type: 'boolean', value: true,   description: 'X-ACE extension')
option('xinerama',              type: 'boolean', value: true,   description: 'Xinerama extension')
option('xcsecurity',            type: 'boolean', value: false,  description: 'Security extension')
option('xv',                    type: 'boolean', value: true,   description: 'Xv extension')
option('xvmc',                  type: 'boolean', value: true,   description: 'XvMC extension')
option('linux_apm',             type: 'boolean', value: true,   description: 'APM support on Linux')
option('linux_acpi',            type: 'boolean', value: true,   description: 'ACPI support on Linux')
option('xf86-input-inputtest',  type: 'boolean', value: true,   description: 'Test input driver support on Xorg')
option('int10',                 type: 'combo',   value: 'auto', choices: ['stub', 'x86emu', 'vm86', 'auto', 'false'], description: 'Xorg int10 backend (default: usually x86emu)')
option('hal',                   type: 'combo',   value: 'auto', choices: ['true', 'false', 'auto'],   description: 'Enable HAL integration')
option('systemd_notify',        type: 'combo',   value: 'auto', choices: ['true', 'false', 'auto'],   description: 'Enable systemd-notify support')
option('systemd_logind',        type: 'combo',   value: 'auto', choices: ['true', 'false', 'auto'],   description: 'Enable systemd-logind integration')
option('vgahw',                 type: 'combo',   value: 'auto', choices: ['true', 'false', 'auto'],   description: 'Xorg VGA access module')
option('xselinux',              type: 'combo',   value: 'auto', choices: ['true', 'false', 'auto'],   description: 'XSELINUX extension')
option('dga',                   type: 'combo',   value: 'auto', choices: ['true', 'false', 'auto'],   description: 'DGA extension')
option('mitshm',                type: 'combo',   value: 'auto', choices: ['true', 'false', 'auto'],   description: 'SHM extension')
option('agp',                   type: 'combo',   value: 'auto', choices: ['true', 'false', 'auto'],   description: 'AGP support')
option('sha1',                  type: 'combo',   value: 'auto', choices: ['libc', 'CommonCrypto', 'CryptoAPI', 'libmd', 'libsha1', 'libnettle', 'libgcrypt', 'libcrypto', 'auto'], description: 'SHA1 implementation')

option('dri1',                  type: 'combo',   value: 'auto', choices: ['true', 'false', 'auto'],   description: 'Build DRI1 extension (default: auto)')
option('dri2',                  type: 'combo',   value: 'auto', choices: ['true', 'false', 'auto'],   description: 'Build DRI2 extension (default: auto)')
option('dri3',                  type: 'combo',   value: 'auto', choices: ['true', 'false', 'auto'],   description: 'Build DRI3 extension (default: auto)')
option('drm',                   type: 'boolean', value: true,   description: 'Build Xorg with libdrm support')

option('apple-applications-dir',type: 'string',  value: '/Applications/Utilities',                    description: 'Applications directory')
option('apple-application-name',type: 'string',  value: 'X11',                                        description: 'Application name')
option('bundle-id-prefix',      type: 'string',  value: 'org.x',                                      description: 'RDNS prefix for bundle identifier')
option('bundle-version',        type: 'string',  value: 'auto',                                       description: 'The CFBundleVersion for the application bundle')
option('bundle-version-string', type: 'string',  value: 'auto',                                       description: 'The CFBundleShortVersionString for the application bundle')
option('sparkle-feed-url',      type: 'string',                                                       description: 'Feed URL for autoupdating with the Sparkle Framework (default: disabled)')
option('sparkle-public-edkey',  type: 'string',                                                       description: 'Public EdDSA key for verifying updates from the Sparkle feed (default: disabled)')
option('xwayland-path',         type: 'string',                                                       description: 'Directory containing Xwayland executable')
option('xpbproxy',              type: 'boolean', value: false,                                        description: 'Build a standalone X pasteboard proxy')
option('libunwind',             type: 'boolean', value: false,                                        description: 'Use libunwind for backtrace reporting')
option('libdecor',              type: 'combo',   value: 'auto',  choices: ['true', 'false', 'auto'],  description: 'Whether Xwayland should use libdecor when running rootful.')

option('docs',                  type: 'combo',   value: 'false', choices: ['true', 'false', 'auto'],  description: 'Build documentation')
option('devel-docs',            type: 'combo',   value: 'false', choices: ['true', 'false', 'auto'],  description: 'Build development documentation')
option('docs-pdf',              type: 'combo',   value: 'false', choices: ['true', 'false', 'auto'],  description: 'Whether to build PDF version of documentation. Setting is ignored if documentation is not built.')
option('docs-man',              type: 'boolean', value: true,    description: '')

option('build-font-server',     type: 'boolean', value: false,   description: '')
option('build-tests',           type: 'boolean', value: false,   description: '')

## Build libraries:
option('xshmfence',             type: 'boolean', value: true)

## Build demos:
option('build-demos',           type: 'boolean', value: true)
option('demos-x11perf',         type: 'boolean', value: true)
option('demos-xcmstest',        type: 'boolean', value: true)
option('demos-ico',             type: 'boolean', value: true)
option('demos-maze',            type: 'boolean', value: true)
option('demos-puzzle',          type: 'boolean', value: true)
option('demos-xeyes',           type: 'boolean', value: true)
option('demos-xgamma',          type: 'boolean', value: true)
option('demos-xev',             type: 'boolean', value: true)

## External static libraries
#  static/pixman
option('use-builtin-pixman',    type: 'boolean', value: true)
option('loongson-mmi',          type: 'feature',                 description: 'Use Loongson MMI intrinsic optimized paths')
option('mmx',                   type: 'feature',                 description: 'Use X86 MMX intrinsic optimized paths')
option('sse2',                  type: 'feature',                 description: 'Use X86 SSE2 intrinsic optimized paths')
option('ssse3',                 type: 'feature',                 description: 'Use X86 SSSE3 intrinsic optimized paths')
option('vmx',                   type: 'feature',                 description: 'Use PPC VMX/Altivec intrinsic optimized paths')
option('arm-simd',              type: 'feature',                 description: 'Use ARMv6 SIMD intrinsic optimized paths')
option('neon',                  type: 'feature',                 description: 'Use ARM NEON intrinsic optimized paths')
option('a64-neon',              type: 'feature',                 description: 'Use ARM A64 NEON intrinsic optimized paths')
option('mips-dspr2',            type: 'feature',                 description: 'Use MIPS32 DSPr2 intrinsic optimized paths')
option('rvv',                   type: 'feature',                 description: 'Use RISC-V Vector extension')
option('gnu-inline-asm',        type: 'feature',                 description: 'Use GNU style inline assembler')
option('tls',                   type: 'feature',                 description: 'Use compiler support for thread-local storage')
option('openmp',                type: 'feature',                 description: 'Enable OpenMP for tests')
option('cpu-features-path',     type: 'string',                  description: 'Path to platform-specific cpu-features.[ch] for systems that do not provide it (e.g. Android)')
option('timers',                type: 'boolean', value : false,  description: 'Enable TIMER_* macros')

## Drivers
#  libinput
option('sdkdir',                type: 'string',  value: '',      description: 'Directory to install header files in [default=from xorg-server pkgconf]')
option('xorg-module-dir',       type: 'string',  value: '',      description: 'Default xorg module directory [default=from xorg-server pkgconf]')
option('xorg-conf-dir',         type: 'string',  value: '',      description: 'Default xorg.conf.d directory [default=from xorg-server pkgconfig]')
